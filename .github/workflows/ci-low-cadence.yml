name: Continuous Integration (Low Cadence)
on:
  workflow_dispatch:
  repository_dispatch:
    types: run-slow-tests
  schedule:
    - cron: '0 0,12 * * *'

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  java-slow-test-build:
    name: Java Slow Tests (JDK ${{ matrix.java }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        java: [ '8', '11', '16', '17-ea' ]
        os: [ 'ubuntu-20.04', 'windows-latest' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Setup BUILD_JAVA_HOME (Linux)
        if: runner.os == 'Linux'
        run: echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
      - name: Setup BUILD_JAVA_HOME (Windows)
        if: runner.os == 'Windows'
        run: echo "BUILD_JAVA_HOME=$env:JAVA_HOME" | Out-File $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Setup java 8 to run the Gradle script
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build and Run Slow Tests with Gradle
        run: ./gradlew slowTest
        env:
          BUILD_JAVA_VERSION: ${{ matrix.java }}
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=dir::build/test_logs"

          ./gradlew copyTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.dir == 'build/test_logs'
        uses: actions/upload-artifact@v2
        with:
          name: crash-logs-${{ matrix.os }}-java-${{ matrix.java }}
          path: ${{ steps.copy_test_logs.outputs.dir }}

  c-driver-slow-system-test-gcc-build:
    name: C++ Slow System Tests GCC ${{ matrix.version }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        version: [ '10' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup java 8 to run the Gradle script
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
      - name: Install compiler
        run: |
          sudo apt-get update

          sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev libidn11
      - name: Build
        run: cppbuild/cppbuild --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests --no-system-tests
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=dir::build/test_logs"

          ./gradlew copyTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.dir == 'build/test_logs'
        uses: actions/upload-artifact@v2
        with:
          name: crash-logs-c-gcc-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.dir }}

  c-driver-slow-system-test-msvc-build:
    name: C++ Slow System Tests MSVC
    runs-on: windows-latest
    strategy:
      fail-fast: false
    env:
      CC: cl
      CXX: cl
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup java 8 to run the Gradle script
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
      - name: Build
        run: cppbuild/cppbuild --slow-system-tests --no-system-tests
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=dir::build/test_logs"

          ./gradlew copyTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.dir == 'build/test_logs'
        uses: actions/upload-artifact@v2
        with:
          name: crash-logs-c-msvc-latest
          path: ${{ steps.copy_test_logs.outputs.dir }}

  cpp-gcc-sanitize-build:
    name: C++ Sanitise Build GCC ${{ matrix.version }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        version: [ '10' ]
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-
      - name: Cache Gradle wrappers
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Setup java 8 to run the Gradle script
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
        run: |
          echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV
          echo "BUILD_JAVA_VERSION=8" >> $GITHUB_ENV
      - name: Install compiler
        run: |
          sudo apt-get update

          sudo apt-get install -y g++-${{ matrix.version }} libbsd-dev uuid-dev libidn11
      - name: Build
        run: cppbuild/cppbuild --sanitise-build --c-warnings-as-errors --cxx-warnings-as-errors --slow-system-tests
      - name: Copy test logs
        id: copy_test_logs
        if: failure()
        run: |
          echo "::set-output name=dir::build/test_logs"

          ./gradlew copyTestLogs
      - name: Upload crash logs
        if: always() && steps.copy_test_logs.outputs.dir == 'build/test_logs'
        uses: actions/upload-artifact@v2
        with:
          name: crash-logs-gcc-sanitize-${{ matrix.version }}
          path: ${{ steps.copy_test_logs.outputs.dir }}
